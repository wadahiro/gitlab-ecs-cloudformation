Description: >

    This template deploys a VPC, with a pair of public and private subnets spread 
    across two Availabilty Zones. It deploys an Internet Gateway, with a default 
    route on the public subnets. It deploys a pair of NAT Gateways (one in each AZ), 
    and default routes for them in the private subnets.

    It then deploys a highly available ECS cluster using an AutoScaling Group, with 
    ECS hosts distributed across multiple Availability Zones. 

    Finally, it deploys a pair of example ECS services from containers published in 
    Amazon EC2 Container Registry (Amazon ECR).

    Last Modified: 22nd September 2016
    Author: Paul Maddox <pmaddox@amazon.com>

Parameters:
    VPC:
        Description: VPC Id like 'vpc-18ac277d'.
        Type: AWS::EC2::VPC::Id
        
    Subnets:
        Description: Choose which subnets this ECS cluster should be deployed to
        Type: String
        
    ProxyHost:
        Description: Proxy host.
        Type: String
        
    ProxyPort:
        Description: Proxy port.
        Type: Number
        

Resources:

    SecurityGroups:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: infrastructure/security-groups.yaml
            Parameters: 
                EnvironmentName: !Ref AWS::StackName
                VPC: !Ref VPC

    ALB:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: infrastructure/load-balancers.yaml
            Parameters:
                EnvironmentName: !Ref AWS::StackName
                VPC: !Ref VPC
                Subnets: !Ref Subnets
                SecurityGroup: !GetAtt SecurityGroups.Outputs.LoadBalancerSecurityGroup

    ECS:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: infrastructure/ecs-cluster.yaml
            Parameters:
                EnvironmentName: !Ref AWS::StackName
                InstanceType: t2.micro
                ClusterSize: 1
                VPC: !Ref VPC
                SecurityGroup: !GetAtt SecurityGroups.Outputs.ECSHostSecurityGroup
                Subnets: !Ref Subnets
                ProxyHost: !Ref ProxyHost
                ProxyPort: !Ref ProxyPort

    ProductService:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: services/product-service/service.yaml
            Parameters:
                VPC: !Ref VPC
                Cluster: !GetAtt ECS.Outputs.Cluster
                DesiredCount: 2
                Listener: !GetAtt ALB.Outputs.Listener 
                Path: /products

    WebsiteService:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: services/website-service/service.yaml
            Parameters:
                VPC: !Ref VPC
                Cluster: !GetAtt ECS.Outputs.Cluster
                DesiredCount: 2
                ProductServiceUrl: !Join [ "/", [ !GetAtt ALB.Outputs.LoadBalancerUrl, "products" ]]
                Listener: !GetAtt ALB.Outputs.Listener 
                Path: /


Outputs:

    ProductServiceUrl: 
        Description: The URL endpoint for the product service
        Value: !Join [ "/", [ !GetAtt ALB.Outputs.LoadBalancerUrl, "products" ]]

    WebsiteServiceUrl: 
        Description: The URL endpoint for the website service
        Value: !Join ["", [ !GetAtt ALB.Outputs.LoadBalancerUrl, "/" ]]
